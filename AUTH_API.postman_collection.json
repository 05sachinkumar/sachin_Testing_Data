{
	"info": {
		"_postman_id": "92eaf1b2-7439-4d25-a4e0-eb45dfb016fd",
		"name": "AUTH_API",
		"description": "This Collection consist of **RestFul API's that are public + secured APIs**. The Auth type used are-\n\n**1). Basic Auth**\n\n**2). Digest Auth**\n\n**3). Bearer Token Auth**\n\nif enter valid credentials, we recieve **200 OK** from server else we recieve **401 UnAuthorized** from server.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37635178",
		"_collection_link": "https://sac2024.postman.co/workspace/sachin_public~10639d94-980d-47ac-b333-f8e4b13fb416/collection/37635178-92eaf1b2-7439-4d25-a4e0-eb45dfb016fd?action=share&source=collection_link&creator=37635178"
	},
	"item": [
		{
			"name": "POSITIVE TC",
			"item": [
				{
					"name": "BASIC_AUTH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//javaScript code---\r",
									"pm.test(\"Verify if 200 is recieved\", function () {\r",
									"\tpm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if ok is response message\", function () {\r",
									"\tpm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"verify the response body containe some string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"authenticated\");\r",
									"    pm.expect(pm.response.text()).to.include(\"user\");\r",
									"});\r",
									"\r",
									"pm.test(\"Veerify contain type response header application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "user123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "user",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/basic-auth/user/user123",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"basic-auth",
								"user",
								"user123"
							]
						},
						"description": "This is a Restful API that uses BASIC AUTHORIZATION"
					},
					"response": []
				},
				{
					"name": "Bearer Token Authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// JavaScript Code\r",
									"pm.test(\"Verify if 200 is recieved\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if OK response message\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contain some string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"authenticated\");\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if content type response header is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "Bearer 1234",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/bearer",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"bearer"
							]
						},
						"description": "This is a Restful API's that uses Bearer Token Authorization"
					},
					"response": []
				},
				{
					"name": "https://httpbin.org/digest-auth/auth/user/password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//JavaScript Code-----\r",
									"pm.test(\"Verify if 200 is recieved\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"verify if Ok response message\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contain some string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"authenticated\");\r",
									"    pm.expect(pm.response.text()).to.include(\"user\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "digest",
							"digest": [
								{
									"key": "qop",
									"value": "auth",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "MD5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/digest-auth/auth/user/password",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"digest-auth",
								"auth",
								"user",
								"password"
							]
						},
						"description": "This is a Restful API's that uses a Digest Auhtorization"
					},
					"response": []
				},
				{
					"name": "Digest_Auth_Algorithm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//javascript code\r",
									"pm.test(\"verify ok is recieved\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if ok response message\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contain some string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"authenticated\");\r",
									"    pm.expect(pm.response.text()).to.include(\"user\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "digest",
							"digest": [
								{
									"key": "password",
									"value": "passwd",
									"type": "string"
								},
								{
									"key": "qop",
									"value": "auth",
									"type": "string"
								},
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "MD5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/digest-auth/auth/user/passwd/MD5",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"digest-auth",
								"auth",
								"user",
								"passwd",
								"MD5"
							]
						},
						"description": "This is a Restful API that use Digest Auth Algorithm"
					},
					"response": []
				}
			]
		},
		{
			"name": "NEGATIVE TC",
			"item": [
				{
					"name": "BASIC AUTH",
					"item": [
						{
							"name": "BASIC_AUTH NO-AUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//javaScript code---\r",
											"pm.test(\"Verify if 401 is recievedS\", function () {\r",
											"\tpm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED is response message\", function () {\r",
											"\tpm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/basic-auth/user/user123",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"basic-auth",
										"user",
										"user123"
									]
								},
								"description": "This is a restful api that uses no-auth"
							},
							"response": []
						},
						{
							"name": "BASIC_AUTH Empty-Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//javaScript code---\r",
											"pm.test(\"Verify if 401 is recievedS\", function () {\r",
											"\tpm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED is response message\", function () {\r",
											"\tpm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "",
											"type": "string"
										},
										{
											"key": "username",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/basic-auth/user/user123",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"basic-auth",
										"user",
										"user123"
									]
								}
							},
							"response": []
						},
						{
							"name": "BASIC_AUTH Method Not Allowed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//javaScript code---\r",
											"pm.test(\"Verify if 405 is recievedS\", function () {\r",
											"\tpm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if METHOD NOT ALLOWED is response message\", function () {\r",
											"\tpm.response.to.have.status(\"METHOD NOT ALLOWED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "",
											"type": "string"
										},
										{
											"key": "password",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/basic-auth/user/user123",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"basic-auth",
										"user",
										"user123"
									]
								}
							},
							"response": []
						},
						{
							"name": "BASIC_AUTH IP ADDRESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//javaScript code---\r",
											"pm.test(\"Verify if 200 is recievedS\", function () {\r",
											"\tpm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if OK is response message\", function () {\r",
											"\tpm.response.to.have.status(\"OK\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "user123",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://54.243.255.141/basic-auth/user/user123",
									"protocol": "http",
									"host": [
										"54",
										"243",
										"255",
										"141"
									],
									"path": [
										"basic-auth",
										"user",
										"user123"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BEARER TOKEN AUTH",
					"item": [
						{
							"name": "Bearer Token Authorization NO-AUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// JavaScript Code\r",
											"pm.test(\"Verify if 401 is recieved\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED response message\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/bearer",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"bearer"
									]
								},
								"description": "This is a restful api's that uses no-auth"
							},
							"response": []
						},
						{
							"name": "Bearer Token Authorization Empty-Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// JavaScript Code\r",
											"pm.test(\"Verify if 401 is recieved\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED response message\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/bearer",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"bearer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bearer Token Authorization Method Not Allowed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// JavaScript Code\r",
											"pm.test(\"Verify if 405 is recieved\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if METHOD NOT ALLOWED response message\", function () {\r",
											"    pm.response.to.have.status(\"METHOD NOT ALLOWED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/bearer",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"bearer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bearer Token Authorization IP ADDRESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// JavaScript Code\r",
											"pm.test(\"Verify if 200 is recieved\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if OK response message\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "bearer 1234",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://54.243.255.141/bearer",
									"protocol": "http",
									"host": [
										"54",
										"243",
										"255",
										"141"
									],
									"path": [
										"bearer"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DIGEST AUTH",
					"item": [
						{
							"name": "Digest-Auth NO-AUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//JavaScript Code-----\r",
											"pm.test(\"Verify if 401 is recieved\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"verify if UNAUTHORIZED response message\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/digest-auth/auth/user/password",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"digest-auth",
										"auth",
										"user",
										"password"
									]
								},
								"description": "This is a restful apis that uses a no auth"
							},
							"response": []
						},
						{
							"name": "Digest-Auth Empty-Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//JavaScript Code-----\r",
											"pm.test(\"Verify if 401 is recieved\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"verify if UNAUTHORIZED response message\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "digest",
									"digest": [
										{
											"key": "password",
											"value": "",
											"type": "string"
										},
										{
											"key": "username",
											"value": "",
											"type": "string"
										},
										{
											"key": "qop",
											"value": "auth",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "MD5",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/digest-auth/auth/user/password",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"digest-auth",
										"auth",
										"user",
										"password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Digest-Auth Method Not Allowed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//JavaScript Code-----\r",
											"pm.test(\"Verify if 405 is recieved\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"pm.test(\"verify if METHOD NOT ALLOWED response message\", function () {\r",
											"    pm.response.to.have.status(\"METHOD NOT ALLOWED\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "digest",
									"digest": [
										{
											"key": "password",
											"value": "",
											"type": "string"
										},
										{
											"key": "username",
											"value": "",
											"type": "string"
										},
										{
											"key": "qop",
											"value": "auth",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "MD5",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/digest-auth/auth/user/password",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"digest-auth",
										"auth",
										"user",
										"password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Digest-Auth IP ADDRESS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//JavaScript Code-----\r",
											"pm.test(\"Verify if 200 is recieved\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"verify if OK response message\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "digest",
									"digest": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										},
										{
											"key": "qop",
											"value": "auth",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "MD5",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://54.243.255.141/digest-auth/auth/user/password",
									"protocol": "http",
									"host": [
										"54",
										"243",
										"255",
										"141"
									],
									"path": [
										"digest-auth",
										"auth",
										"user",
										"password"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}